{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"X",
				"XxHash"
			],
			[
				"s",
				"scattercount"
			],
			[
				"smaple",
				"sampletype"
			],
			[
				"keyfot",
				"keyforstring"
			],
			[
				"mu",
				"murmur3"
			],
			[
				"int",
				"int"
			],
			[
				"train",
				"trainingset"
			],
			[
				"prin",
				"printWeights"
			],
			[
				"inputs",
				"inputs"
			],
			[
				"tas",
				"taskcallback"
			],
			[
				"buha",
				"buhaRun"
			],
			[
				"task",
				"taskobject"
			],
			[
				"bu",
				"buhaRun"
			],
			[
				"if",
				"if\tif"
			],
			[
				"ti",
				"title\tTag"
			],
			[
				"buh",
				"buhapush"
			],
			[
				"outputW",
				"outputWeights"
			],
			[
				"hidden",
				"hiddenWeights"
			],
			[
				"c",
				"currleftscroll"
			],
			[
				"c2c",
				"c2cLog"
			],
			[
				"c2",
				"c2cLog"
			],
			[
				"l",
				"li"
			],
			[
				"curr",
				"currleftscroll"
			],
			[
				"curleft",
				"curleftscroll"
			],
			[
				"off",
				"offsetLeft"
			],
			[
				"cur",
				"curleftscroll"
			],
			[
				"length",
				"length"
			],
			[
				"Dial",
				"DialOptions"
			],
			[
				"meta",
				"metatags"
			],
			[
				"met",
				"metatags"
			],
			[
				"scr",
				"scrollTop"
			],
			[
				"de",
				"deactivate"
			],
			[
				"activa",
				"activationfield"
			],
			[
				"ac",
				"activationfield"
			],
			[
				"regex",
				"regextemp"
			],
			[
				"reg",
				"regex_list"
			],
			[
				"tage",
				"target_num"
			],
			[
				"make",
				"makeCallnu"
			],
			[
				"in",
				"intl_prefix"
			],
			[
				"li",
				"licensekey"
			],
			[
				"text",
				"textContent"
			],
			[
				"get",
				"getlicensekey"
			],
			[
				"activatio",
				"activationfield"
			],
			[
				"c2c-",
				"c2c-wrapper-highlight"
			],
			[
				"bo",
				"box-sizing"
			],
			[
				"overflow",
				"overflow-y"
			],
			[
				"over",
				"overflow-y"
			],
			[
				"box-",
				"box-sizing"
			],
			[
				"back",
				"background-color"
			],
			[
				"base",
				"basedata"
			],
			[
				"apimookent",
				"apimookentity"
			],
			[
				"method",
				"method"
			],
			[
				"Api",
				"ApimookEntity"
			],
			[
				"pa",
				"parameter_bag"
			],
			[
				"par",
				"parameter_bag"
			],
			[
				"appname",
				"appname"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"flash",
				"flashEditor"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"pad",
				"padding-bottom"
			],
			[
				"backgr",
				"background-clip"
			],
			[
				"repe",
				"repeat-x"
			],
			[
				"font",
				"font-family"
			],
			[
				"pure",
				"pure-button"
			],
			[
				"backgroun",
				"background-color"
			],
			[
				"ele",
				"elemBottom"
			],
			[
				"elem",
				"elemBottom"
			],
			[
				"is",
				"isScrolledIntoView"
			],
			[
				"u",
				"uniqueuri"
			],
			[
				"un",
				"uniqueuri"
			],
			[
				"Servie",
				"ServiceCore"
			],
			[
				"getEle",
				"getElementById"
			],
			[
				"ret",
				"return_list"
			],
			[
				"hel",
				"HelpDeskEmployees"
			],
			[
				"Hel",
				"HelpDeskEmployees"
			],
			[
				"ticket",
				"ticket_list"
			],
			[
				"Ticker",
				"TicketAlreadyExistsException"
			],
			[
				"retry",
				"retryCount"
			],
			[
				"th",
				"threshold"
			],
			[
				"root",
				"root"
			],
			[
				"val",
				"val"
			],
			[
				"string",
				"string"
			],
			[
				"history",
				"historyCommits"
			],
			[
				"tag",
				"tagCommitHash"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.go",
			"settings":
			{
				"buffer_size": 1724,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package robinhood\n\nimport (\n\t\"fmt\"\n)\n\ntype RobinHood struct {\n\tvalues []Entry\n\tcount  uint32\n}\n\nfunc NewRobinHood(size int) *RobinHood {\n\treturn &RobinHood{\n\t\tvalues: make([]Entry, size, size),\n\t}\n}\n\nfunc (m RobinHood) Size() uint32 {\n\treturn uint32(len(m.values))\n}\n\nfunc (m *RobinHood) Put(k string, v interface{}) {\n\ti := FnvHash(k) % m.Size()\n\t// DIB (distance to initial bucket) is zero initially\n\te := Entry{key: k, value: v, dib: 0}\n\tfor c := i; ; c = (c + 1) % m.Size() {\n\t\tif m.values[c].value == nil {\n\t\t\t// Able to insert here\n\t\t\tm.values[c] = e\n\t\t\tm.count += 1\n\t\t\treturn\n\t\t} else {\n\t\t\tif m.values[c].dib < e.dib {\n\t\t\t\t// To be swapped because it is rich.\n\t\t\t\ttmp := e\n\t\t\t\te = Entry{\n\t\t\t\t\tkey:   m.values[c].key,\n\t\t\t\t\tvalue: m.values[c].value,\n\t\t\t\t\tdib:   m.values[c].dib,\n\t\t\t\t}\n\t\t\t\t// Current target is inserted here instead\n\t\t\t\tm.values[c] = Entry{\n\t\t\t\t\tkey:   tmp.key,\n\t\t\t\t\tvalue: tmp.value,\n\t\t\t\t\tdib:   tmp.dib,\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// The entry to be inserted goes away from ideal position gradually.\n\t\te.dib += 1\n\t}\n}\n\nfunc (m *RobinHood) Get(k string) interface{} {\n\ti := FnvHash(k) % m.Size()\n\te := m.values[i]\n\tfor e.key != k {\n\t\ti = (i + 1) % m.Size()\n\t\te = m.values[i]\n\t\tif i == FnvHash(k)%m.Size() {\n\t\t\t// Not Found\n\t\t\treturn nil\n\t\t}\n\t}\n\treturn e.value\n}\n\nfunc (m *RobinHood) Erase(k string) {\n\ti := FnvHash(k) % m.Size()\n\te := m.values[i]\n\tfor e.key != k {\n\t\ti = (i + 1) % m.Size()\n\t\te = m.values[i]\n\t\tif i == FnvHash(k)%m.Size() {\n\t\t\treturn\n\t\t}\n\t}\n\tm.values[i] = Entry{key: \"\", value: nil}\n\tm.count -= 1\n}\n\nfunc (m *RobinHood) LoadFactor() float32 {\n\treturn float32(m.count) / float32(m.Size())\n}\n\nfunc (m *RobinHood) DibAverage() float32 {\n\tsum := uint32(0)\n\tfor _, v := range m.values {\n\t\tsum += v.dib\n\t}\n\treturn float32(sum) / float32(m.count)\n}\n\nfunc (m *RobinHood) String() string {\n\tret := \"\"\n\tfor _, v := range m.values {\n\t\tret = ret + fmt.Sprintf(\"[%s,%v,%d] \", v.key, v.value, v.dib)\n\t}\n\treturn ret\n}\n",
			"settings":
			{
				"buffer_size": 1932,
				"line_ending": "Unix",
				"name": "package robinhood"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 390.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Local Dependency"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/ar/work/bnumamaps/bench_test.go",
		"/home/ar/work/murmur3-map/README.md",
		"/home/ar/work/murmur3-map/pkg/cityhash/city64.go",
		"/home/ar/work/murmur3-map/pkg/cityhash/cityhash.go",
		"/home/ar/work/murmur3-map/pkg/xxhash/xxhash_other.go",
		"/home/ar/work/murmur3-map/pkg/xxhash/xxhash.go",
		"/home/ar/work/murmur3-map/test/testmap.go",
		"/home/ar/work/murmur3-map/bench_test.go",
		"/home/ar/work/murmur3-map/murmur3map.go",
		"/home/ar/work/murmur3-map/pkg/murmur.go",
		"/home/ar/work/murmur3-map/pkg/cityhash/untitled",
		"/home/ar/work/murmur3-map/test/testxxhash.go",
		"/home/ar/work/murmur3-map/pkg/xxhash.go",
		"/home/ar/work/murmur3-map/test/bench_test.go",
		"/home/ar/work/murmur3-map/bench.go",
		"/home/ar/work/murmur3-map/murmur3map/murmur3map.go",
		"/home/ar/work/murmur3-map/test/testmurmur.go",
		"/home/ar/work/murmur3-map/testmurmur.go",
		"/home/ar/work/murmur3-map/testmap.go",
		"/home/ar/work/PerceptRon/nand_gate_test.cpp",
		"/home/ar/work/PerceptRon/and_gate_test.cpp",
		"/home/ar/work/PerceptRon/README.md",
		"/home/ar/work/PerceptRon/or_gate_test.cpp",
		"/home/ar/work/PerceptRon/personality_classifier_test.cpp",
		"/home/ar/work/PerceptRon/perceptron.h",
		"/home/ar/work/PerceptRon/personality_classifier.cpp",
		"/home/ar/work/PerceptRon/or_gate.cpp",
		"/home/ar/work/PerceptRon/main.cpp",
		"/home/ar/work/PerceptRon/perceptron.cpp",
		"/home/ar/work/bnuma/main.go",
		"/home/ar/work/buha/index.html",
		"/home/ar/work/buha/test.html",
		"/home/ar/work/buha/buha.js",
		"/home/ar/work/buha/index.js",
		"/home/ar/my-app/src/index.js",
		"/home/ar/my-app/src/index.css",
		"/home/ar/my-app/package-lock.json",
		"/home/ar/work/nets/matrix.h",
		"/home/ar/work/nets/nets.h",
		"/home/ar/work/nets/netsmath.h",
		"/home/ar/work/nets/makefile",
		"/home/ar/work/nets/README.md",
		"/home/ar/work/nets/main.cpp",
		"/home/ar/Desktop/v12/manifest.json",
		"/home/ar/Desktop/v12/options/options.js",
		"/home/ar/Desktop/v12/options/options.html",
		"/home/ar/Desktop/v12/options/options.css",
		"/home/ar/Desktop/v12/options/c2c.css",
		"/home/ar/Desktop/v12/options/background.html",
		"/home/ar/Desktop/v12/content/content.js",
		"/home/ar/Desktop/v12/background/background.js",
		"/home/ar/Desktop/skyswitchclick2call/options.js",
		"/home/ar/Desktop/options_backup.html",
		"/home/ar/Desktop/options_backup2.html",
		"/home/ar/Desktop/skyswitchclick2call/options.html",
		"/home/ar/Desktop/skyswitchclick2call/options.css",
		"/home/ar/Desktop/skyswitchclick2call/manifest.json",
		"/home/ar/Desktop/skyswitchclick2call/content.js",
		"/home/ar/Desktop/skyswitchclick2call/background.js",
		"/home/ar/Desktop/skyswitchclick2call/background.html",
		"/home/ar/Desktop/skyswitchclick2call/loading.gif",
		"/home/ar/Desktop/skyswitchclick2call/uglipop.min.js",
		"/home/ar/work/symfony_samply/src/AppBundle/Apimook/ApimookOperations.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Apimook/ApimookDao.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Apimook/ApimookEntity.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Apimook/ApimookDatabaseUtils.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Apimook/ApimookUtils.php",
		"/home/ar/work/symfony_samply/app/Resources/views/base.html.twig",
		"/home/ar/work/symfony_samply/web/js/test.js",
		"/home/ar/work/symfony_samply/web/js/loadjs.js",
		"/home/ar/work/symfony_samply/web/js/mode_store.js",
		"/home/ar/work/symfony_samply/app/config/parameters.yml",
		"/home/ar/work/symfony_samply/app/config/services.yml",
		"/home/ar/work/symfony_samply/app/config/config_dev.yml",
		"/home/ar/work/symfony_samply/app/config/config.yml",
		"/home/ar/work/symfony_samply/app/Resources/views/afterpaste.html.twig",
		"/home/ar/work/symfony_samply/app/Resources/views/index.html.twig",
		"/home/ar/work/symfony_samply/scrap.sql",
		"/home/ar/work/symfony_samply/src/AppBundle/Entity/Code.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Dao/CoreDao.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Service/ServiceCore.php",
		"/home/ar/work/symfony_samply/src/AppBundle/Utils/DatabaseUtils.php",
		"/home/ar/work/symfony_samply/app/Resources/views/test.html",
		"/home/ar/work/symfony_samply/app/Resources/views/apimook.html",
		"/home/ar/work/symfony_samply/src/AppBundle/Controller/DefaultController.php",
		"/home/ar/work/symfony_samply/scarp.sql",
		"/home/ar/work/bgindb/cereal.c",
		"/home/ar/work/bgindb/cereal.h",
		"/home/ar/work/bgindb/bgindb.h",
		"/home/ar/work/bgindb/bgindb.c",
		"/home/ar/work/bgindb/bgin_btree.h",
		"/home/ar/work/bgindb/bgin_btree.c",
		"/home/ar/java/problem1/HelpDeskEmployee.java",
		"/home/ar/java/problem1/Asset.java",
		"/home/ar/java/problem1/Ticket.java",
		"/home/ar/java/problem1/CRTicket.java",
		"/home/ar/java/problem1/TicketAlreadyExistsException.java",
		"/home/ar/java/problem1/AssetManagementSystemInterface.java",
		"/home/ar/java/problem1/AssetManagement.java",
		"/home/ar/work/cereal/test.c",
		"/home/ar/work/cereal/cereal.h",
		"/home/ar/work/cereal/cereal.c",
		"/home/ar/cocos/projects/tlm41/Classes/HelloWorldScene.cpp",
		"/home/ar/cocos/projects/tlm41/Classes/GameScene.cpp",
		"/home/ar/cocos/projects/tlm41/CMakeLists.txt",
		"/home/ar/cocos/projects/tlm41/Classes/AppDelegate.cpp",
		"/home/ar/cocos/projects/tlm41/Classes/HelloWorldScene.h",
		"/home/ar/cocos/projects/tlm41/Classes/GameScene.h",
		"/home/ar/cocos/projects/tlm41/Classes/AppDelegate.h",
		"/home/ar/wingify/request/test.html",
		"/home/ar/wingify/request/beacon_request.js",
		"/home/ar/wingify/request/request.js",
		"/home/ar/Desktop/_vwo_ds_parser.js",
		"/home/ar/wingify/vwo-cookie-parser/_vwo_exp_bookmarklet.txt",
		"/home/ar/wingify/vwo-cookie-parser/_vwo_ds_bookmarklet.txt",
		"/home/ar/Desktop/_vwo_exp_parser.js",
		"/home/ar/Desktop/scratchpad.js",
		"/home/ar/Desktop/cookie_exp_bookmarklet.js",
		"/home/ar/Desktop/cookie_exp.js",
		"/home/ar/wingify/jslib-changelogger/__init__.py",
		"/home/ar/wingify/app-changelogger/__init__.py",
		"/home/ar/work/size-tra/size_tracker.js",
		"/home/ar/work/size-tra/command.js",
		"/home/ar/work/size-tra/final3.js",
		"/home/ar/work/test/getTag.js",
		"/home/ar/work/test/bytag.js",
		"/home/ar/work/test/final3.js",
		"/home/ar/work/test/final2.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"MurmurMap",
			"HashMap",
			"and_gate_perceptron",
			"0",
			"tr(",
			".click",
			"activate",
			"c2",
			"extractDomain",
			"c2cLog",
			"c2c",
			"console.log",
			"makePh",
			"console.log",
			"c2cLog",
			"makePhoneLinks",
			"insert",
			"openCity",
			"cityName",
			"makephonelinks",
			"makephoneLinks",
			"clearInterval",
			"assignHandlers",
			"makephoneLinks",
			"makeCalln",
			"chrome.runtime.sendMessage",
			"left",
			"target_num",
			"left",
			"checkAndCall()",
			"checkAndCall",
			"assignHandlers",
			"assignHandlers(",
			"makePhoneLinks",
			"wrapNode",
			"makePhoneLinks",
			"theOBJ",
			"theOBJ()",
			"checkAndCall",
			"getAccessToken",
			"id",
			"c2c-click-tip",
			"background-color: #00b894;",
			"$mysqliObj",
			"\t\t<",
			">\n",
			"de_cereal",
			"de-cereal",
			"app-v3",
			"historyFile",
			"test",
			"historyFile",
			"test",
			"/work/test",
			"test",
			"process.argv[2]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"lymap",
			"MurmurMap",
			"per",
			"background-color: white;",
			"$this->mysqliObj",
			"'+PROJECT_NAME+'",
			"'release.js'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1724,
						"regions":
						{
						},
						"selection":
						[
							[
								1471,
								1471
							]
						],
						"settings":
						{
							"syntax": "Packages/Go/Go.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1284.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1932,
						"regions":
						{
						},
						"selection":
						[
							[
								1725,
								1725
							]
						],
						"settings":
						{
							"auto_name": "package robinhood",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1278.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.540060468632,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "bnumamaps.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
